{"version":3,"sources":["Components/AdditionalInformation/Reviews/Reviews.js"],"names":["isCanceled","Reviews","state","results","a","movieId","this","props","Api","fetchReviews","then","data","setState","map","result","author","content","Component"],"mappings":"0OAKIA,GAAa,EAEJC,EAAb,4MACIC,MAAQ,CACJC,QAAS,IAFjB,8FAKI,mCAAAC,EAAA,sDACIJ,GAAa,EACPK,EAAUC,KAAKC,MAAMF,QAE3BG,IAAIC,aAAaJ,GAASK,MAAK,SAAAC,GAC3BX,GAAc,EAAKY,SAAL,eAAmBD,OALzC,gDALJ,wFAaI,WACIX,GAAa,IAdrB,oBAgBI,WAAU,IACEG,EAAYG,KAAKJ,MAAjBC,QAER,OACI,mCAEQ,6BACKA,EAAQU,KAAI,SAAAC,GAAM,OACf,+BACI,0CAAcA,EAAOC,UACrB,4BAAKD,EAAOE,YAFPF,EAAOC,mBAxB5C,GAA6BE,aAwCdhB","file":"static/js/reviews.a4077f3d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport Api from '../../../Servises/Api';\nimport PropTypes from 'prop-types';\n\nlet isCanceled = true;\n\nexport class Reviews extends Component {\n    state = {\n        results: [],\n    };\n\n    async componentDidMount() {\n        isCanceled = true;\n        const movieId = this.props.movieId;\n\n        Api.fetchReviews(movieId).then(data => {\n            isCanceled && this.setState({ ...data });\n        });\n    }\n    componentWillUnmount() {\n        isCanceled = false;\n    }\n    render() {\n        const { results } = this.state;\n\n        return (\n            <>\n                {\n                    <ul>\n                        {results.map(result => (\n                            <li key={result.author}>\n                                <h3 >Author: {result.author}</h3>\n                                <p >{result.content}</p>\n                            </li>\n                        ))}\n                    </ul>\n                }\n            </>\n        );\n    }\n}\n\nReviews.propTypes = {\n    movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n"],"sourceRoot":""}