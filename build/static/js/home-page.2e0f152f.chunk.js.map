{"version":3,"sources":["pages/HomePage.js","Servises/Api.js","image/defaultImage.jpeg","Components/Loader/Loader.module.scss","Components/Loader/Loader.js","Components/MoviesList/MoviseListStyled.js","Components/MoviesList/MoviesList.js"],"names":["isCanceled","HomePage","state","films","isLoading","this","setState","Api","fetchMoviesDay","then","data","results","finally","className","Component","axios","defaults","baseURL","params","api_key","a","get","fetchMoviesSearch","query","page","fetchMoviesDetail","movieId","fetchCast","fetchReviews","propTypes","PropTypes","string","isRequired","number","module","exports","App","s","Loader","type","color","height","width","MoviesContainer","styled","ul","withRouter","location","map","film","to","pathname","id","from","src","poster_path","defaultImage","alt","original_title","vote_average"],"mappings":"yNAMIA,GAAa,EACIC,E,4MACnBC,MAAQ,CACNC,MAAO,GACPC,WAAW,G,uDAGb,WAAqB,IAAD,OAClBJ,GAAa,EACbK,KAAKC,SAAS,CAAEF,WAAW,IAC3BG,IACGC,iBACAC,MACC,SAAAC,GACEV,GAAc,EAAKM,SAAS,CAAEH,MAAOO,EAAKC,aAE7CC,SAAQ,WACPZ,GAAc,EAAKM,SAAS,CAAEF,WAAW,S,kCAG/C,WACEJ,GAAa,I,oBAGf,WAAU,IACAI,EAAcC,KAAKH,MAAnBE,UACR,OACE,qCACE,oBAAIS,UAAU,cAAd,4BACCT,GAAa,cAAC,IAAD,IACd,cAAC,IAAD,CAAYD,MAAOE,KAAKH,MAAMC,e,GA7BAW,c,8FCDtCC,IAAMC,SAASC,QAFE,+BAGjBF,IAAMC,SAASE,OAAS,CACpBC,QALY,oCAQhB,IAAMX,EAAc,uCAAG,8BAAAY,EAAA,+EAEQL,IAAMM,IAAN,uBAFR,uBAEPX,EAFO,EAEPA,KAFO,kBAGRA,GAHQ,oGAAH,qDASdY,EAAiB,uCAAG,mCAAAF,EAAA,6DAASG,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,KAAhB,kBAEKT,IAAMM,IAAN,gBAA2B,CAC9CH,OAAQ,CAAEK,QAAOC,UAHH,uBAEVd,EAFU,EAEVA,KAFU,kBAKXA,GALW,oGAAH,sDAWjBe,EAAiB,uCAAG,WAAMC,GAAN,iBAAAN,EAAA,+EAEKL,IAAMM,IAAN,iBAAoBK,IAFzB,uBAEVhB,EAFU,EAEVA,KAFU,kBAGXA,GAHW,yFAAH,sDAMjBiB,EAAS,uCAAG,WAAMD,GAAN,iBAAAN,EAAA,+EAEaL,IAAMM,IAAN,iBAAoBK,EAApB,aAFb,uBAEFhB,EAFE,EAEFA,KAFE,kBAGHA,GAHG,yFAAH,sDAOTkB,EAAY,uCAAG,WAAMF,GAAN,iBAAAN,EAAA,+EAEUL,IAAMM,IAAN,iBAAoBK,EAApB,aAFV,uBAELhB,EAFK,EAELA,KAFK,kBAGNA,GAHM,yFAAH,sDAQlBY,EAAkBO,UAAY,CAC1BN,MAAOO,IAAUC,OAAOC,WACxBR,KAAMM,IAAUG,OAAOD,YAE3BP,EAAkBI,UAAY,CAC1BH,QAASI,IAAUG,OAAOD,YAE9BL,EAAUE,UAAY,CAClBH,QAASI,IAAUG,OAAOD,YAG9BJ,EAAaC,UAAY,CACrBH,QAASI,IAAUG,OAAOD,YAIf,KACXxB,iBACAc,oBACAG,oBACAE,YACAC,iB,gCCzEW,QAA0B,2C,mBCCzCM,EAAOC,QAAU,CAAC,OAAS,yB,8JCMNC,E,4JACjB,WACI,OACI,cAAC,IAAD,CACIvB,UAAWwB,IAAEC,OACbC,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,U,GARU5B,c,0ECLpB6B,E,MAAkBC,EAAOC,GAAV,2P,OCiCbC,iBA3Bf,YAA0C,IAApB3C,EAAmB,EAAnBA,MAAO4C,EAAY,EAAZA,SACzB,OACI,cAACJ,EAAD,UACKxC,EAAM6C,KAAI,SAAAC,GAAI,OACX,6BACI,eAAC,IAAD,CACIC,GAAI,CACAC,SAAS,WAAD,OAAaF,EAAKG,IAC1BlD,MAAO,CACHmD,KAAMN,EAASI,SACf5B,MAAOwB,EAASxB,QAL5B,UAQI,qBACI+B,IAAKL,EAAKM,YAAL,UAhBrB,uDAgBqB,OAA4BN,EAAKM,aAAgBC,IACtDC,IAAI,QACJf,MAAM,MACND,OAAO,QAEX,4BAAIQ,EAAKS,iBACT,+CAAkBT,EAAKU,oBAhBtBV,EAAKG","file":"static/js/home-page.2e0f152f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport Loader from \"../Components/Loader\";\nimport MoviesList from \"../Components/MoviesList/MoviesList\";\nimport Api from '../Servises/Api';\n\nlet isCanceled = true;\nexport default class HomePage extends Component {\n  state = {\n    films: [],\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    isCanceled = true;\n    this.setState({ isLoading: true });\n    Api\n      .fetchMoviesDay()\n      .then(\n        data => {\n          isCanceled && this.setState({ films: data.results });\n        })\n      .finally(() => {\n        isCanceled && this.setState({ isLoading: false });\n      });\n  }\n  componentWillUnmount() {\n    isCanceled = false;\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <>\n        <h2 className='moviesTitle'>Trending today</h2>\n        {isLoading && <Loader />}\n        <MoviesList films={this.state.films} />\n      </>\n    );\n  }\n}\n\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '93638e3fbf6f3d3914a333647822b76d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n    api_key: API_KEY,\n};\n\nconst fetchMoviesDay = async () => {\n    try {\n        const { data } = await axios.get(`/trending/movie/day`);\n        return data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nconst fetchMoviesSearch = async ({ query, page }) => {\n    try {\n        const { data } = await axios.get(`/search/movie`, {\n            params: { query, page },\n        });\n        return data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nconst fetchMoviesDetail = async movieId => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}`);\n        return data;\n    } catch { }\n};\nconst fetchCast = async movieId => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}/credits`);\n        return data;\n    } catch { }\n};\n\nconst fetchReviews = async movieId => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}/reviews`);\n        return data;\n    } catch { }\n};\n\n\nfetchMoviesSearch.propTypes = {\n    query: PropTypes.string.isRequired,\n    page: PropTypes.number.isRequired,\n};\nfetchMoviesDetail.propTypes = {\n    movieId: PropTypes.number.isRequired,\n};\nfetchCast.propTypes = {\n    movieId: PropTypes.number.isRequired,\n};\n\nfetchReviews.propTypes = {\n    movieId: PropTypes.number.isRequired,\n};\n\n\nexport default {\n    fetchMoviesDay,\n    fetchMoviesSearch,\n    fetchMoviesDetail,\n    fetchCast,\n    fetchReviews\n};","export default __webpack_public_path__ + \"static/media/defaultImage.a234994d.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__BIuQd\"};","import React, { Component } from 'react'\n\n\nimport Loader from \"react-loader-spinner\";\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.scss';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <Loader\n                className={s.Loader}\n                type=\"Puff\"\n                color=\"#3f51b5\"\n                height={100}\n                width={100}\n            />\n        );\n    }\n}","import styled from \"styled-components\";\n\nexport const MoviesContainer = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  width: 81%;\n  list-style: none;\n  flex-wrap: wrap;\n  margin:-10px auto;\n  >li {\n    max-width:200px;\n    padding: 10px;\n  }\n  >li>a{\n    color:white;\n \n  }\n`;","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport defaultImage from '../../image/defaultImage.jpeg';\nimport { MoviesContainer } from './MoviseListStyled';\n\nconst URL = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2';\n\nfunction MoviesList({ films, location }) {\n    return (\n        <MoviesContainer>\n            {films.map(film => (\n                <li key={film.id}>\n                    <Link\n                        to={{\n                            pathname: `/movies/${film.id}`,\n                            state: {\n                                from: location.pathname,\n                                query: location.query\n                            },\n                        }}>\n                        <img\n                            src={film.poster_path ? `${URL}${film.poster_path}` : defaultImage}\n                            alt=\"movie\"\n                            width=\"200\"\n                            height=\"300\"\n                        />\n                        <p>{film.original_title}</p>\n                        <p>Vote average: {film.vote_average}</p>\n                    </Link>\n                </li>\n            ))}\n        </MoviesContainer>\n    );\n};\nexport default withRouter(MoviesList);"],"sourceRoot":""}